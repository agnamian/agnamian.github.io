import{P as x}from"./ParticlesInteractorBase-vfDeBun3.js";import{J as R}from"./index-jZ4SSCT0.js";const q=1,y=2;class B extends x{constructor(e){super(e)}clear(){}init(){}interact(e,a){var g,u,d;const i=this.container.infecter;if(!i||(i.updateInfection(e,a.value),((g=e.infection)==null?void 0:g.stage)===void 0))return;const s=this.container,l=s.actualOptions,n=l.infection;if(!(n!=null&&n.enable)||n.stages.length<q)return;const o=n.stages[e.infection.stage],S=s.retina.pixelRatio,h=e.getRadius()*y+o.radius*S,m=e.getPosition(),r=o.infectedStage??e.infection.stage,f=s.particles.quadTree.queryCircle(m,h),I=o.rate,b=f.length;for(const p of f){const t=p;if(!(t===e||t.destroyed||t.spawning||!(((u=t.infection)==null?void 0:u.stage)===void 0||t.infection.stage!==e.infection.stage)||R()>=I/b)){if(((d=t.infection)==null?void 0:d.stage)===void 0)i.startInfection(t,r);else if(t.infection.stage<e.infection.stage)i.updateInfectionStage(t,r);else if(t.infection.stage>e.infection.stage){const c=n.stages[t.infection.stage],P=(c==null?void 0:c.infectedStage)??t.infection.stage;i.updateInfectionStage(e,P)}}}}isEnabled(){var e,a;return((a=(e=this.container.actualOptions)==null?void 0:e.infection)==null?void 0:a.enable)??!1}reset(){}}export{B as ParticlesInfecter};
